##SHELL=/usr/bin/ksh
#
# This makefile was produced by /usr/bin/fmgen at 04:12:32 PM on 05/01/95
# If it is invoked by the command line
#	make -f makefile
# it will compile the fortran modules indicated by SRCS into the object
# modules indicated by OBJS and produce an executable named swathps.
#
#bin If it is invoked by the command line
#	make -f makefile swathps.prof
# it will compile the fortran modules indicated by SRCS into the object
# modules indicated by OBJS and produce an executable which profiles
# named swathps.prof.
#
# To remove all the objects but leave the executables use the command line
#	make -f makefile clean
#
# To remove everything but the source files use the command line
#	make -f makefile clobber
#
# To remove the source files created by /usr/bin/fmgen and this makefile
# use the command line
#	make -f makefile void
#
# The parameters SRCS and OBJS should not need to be changed.  If, however,
# you need to add a new module add the name of the source module to the
# SRCS parameter and add the name of the resulting object file to the OBJS
# parameter.  The new modules are not limited to fortran, but may be C, YACC,
# LEX, or CAL.  An explicit rule will need to be added for PASCAL modules.
#

SRCS=  getkpds.f90

OBJS=	${SRCS:.f90=.o}


# Tunable parameters
#
# CF		Name of the fortran compiling system to use
# LDFLAGS	Flags to the loader
# LIBS		List of libraries
# CMD		Name of the executable
# PROFLIB	Library needed for profiling
# 
CF =		ftn

INC   = 
LIBS  = ${W3NCO_LIB4} ${BACIO_LIB4}
BINDIR= ../../../exec
CMD  =         rtofs_getkpds
PROFLIB =	-lprof

# To perform the default compilation, use the first line
# To compile with flowtracing turned on, use the second line
# To compile giving profile additonal information, use the third line
# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
FFLAGS = -free -O3 -assume byterecl -convert big_endian 
DEBUGF = -g -O0 -check all -check noarg_temp_created -check nopointer -warn -warn noerrors -fp-stack-check -fstack-protector-all -fpe0 -debug -traceback -ftrapuv
LDFLAGS = -O3 

# Lines from here on down should not need to be changed.  They are the
# actual rules which make uses to build swathps.
#
all:	$(CMD)
everything: clean $(CMD)  install finish

$(CMD):		$(OBJS) 
	$(CF) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)

debug: FFLAGS = $(DEBUGF)
debug: all

test:
	$(CMD) < input.txt > output.txt
	diff output.txt valid_output.txt

$(OBJS):	$(SRCS)
	$(CF) $(FFLAGS) -c $<


# Make the profiled version of the command and call it swathps.prof
#
$(CMD).prof:	$(OBJS)
	$(CF) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)

clean:
	-rm -f $(OBJS) $(OBJSg) *.mod ${CMD}

finish:
	-rm ${OBJS} *.mod 

install:
	-mv $(CMD) ${BINDIR}

copy_summ:
	cp summary.o.hold summary.o

allclean:	clean all

clobber:	clean
	-rm -f $(CMD) $(CMD).prof 

void:	clobber
	-rm -f $(SRCS) makefile
