SHELL=  /bin/sh
#
#
SRCS=   nc2grib.f

OBJS=   nc2grib.o

# Tunable parameters
#
# FC        Name of the Fortran compiling system to use
# LDFLAGS   Options of the loader
# FFLAGS    Options of the compiler
# DEBUG     Options of the compiler included for debugging
# LIBS      List of libraries
# CMD       Name of the executable
#
FC            =   ftn
LDFLAGS = 	 -O  -convert big_endian
BINDIR= ../../../exec
#INC = /nwprod/lib/incmod/g2_4
#LIBS = -L/nwprod/lib -lg2_v1.4.0_4 -lw3nco_v2.0.3_4 -lbacio_v2.0.1_4 -ljasper -lpng -lz
INC = ${G2_INC4}
LIBS = ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} \
	-L${JASPER_LIB} -ljasper \
	-L${LIBPNG_LIB} -lpng \
	-L${ZLIB_LIBRARIES} -lz

CMD =      rtofs_nc2grb2
#DEBUG =    
DEBUG =     
FFLAGS =   -O3  -I $(INC) $(DEBUG)
DEBUGF = -g -O0 -I$(INC) -check all -check noarg_temp_created -check nopointer -warn -warn noerrors -fp-stack-check -fstack-protector-all -fpe0 -debug -traceback -ftrapuv

# Lines from here down should not need to be changes.  They are
# the actual rules which make uses to build CMD.
#
all:        $(CMD)
everything: clean $(CMD) install finish

$(CMD):      $(OBJS)
	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)

debug: FFLAGS = $(DEBUGF)
debug: all

test:
	$(CMD) < input.txt > output.txt
	diff output.txt valid_output.txt

clean:
	-rm -f $(OBJS) *.mod $(CMD)

finish:
	-rm ${OBJS} # *.mod 

install:
	-mv $(CMD) ${BINDIR}

clobber:        clean
	-rm -f $(CMD) $(CMD).prof

void:   clobber
	-rm -f $(SRCS) makefile

